"""Remove book_genre table

Revision ID: 2487bb75b664
Revises: 
Create Date: 2024-11-24 13:59:02.116827

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2487bb75b664'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('book_genre')
    with op.batch_alter_table('book', schema=None) as batch_op:
        batch_op.add_column(sa.Column('genre_id', sa.Integer(), nullable=False))
        batch_op.alter_column('author',
               existing_type=sa.VARCHAR(length=150),
               type_=sa.String(length=200),
               existing_nullable=False)
        batch_op.alter_column('description',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.Text(),
               nullable=False)
        batch_op.create_foreign_key(None, 'genre', ['genre_id'], ['id'])
        batch_op.drop_column('genre')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('book', schema=None) as batch_op:
        batch_op.add_column(sa.Column('genre', sa.VARCHAR(length=100), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=500),
               nullable=True)
        batch_op.alter_column('author',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=150),
               existing_nullable=False)
        batch_op.drop_column('genre_id')

    op.create_table('book_genre',
    sa.Column('book_id', sa.INTEGER(), nullable=False),
    sa.Column('genre_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.ForeignKeyConstraint(['genre_id'], ['genre.id'], ),
    sa.PrimaryKeyConstraint('book_id', 'genre_id')
    )
    # ### end Alembic commands ###
